# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# ms365enterprise
# ansible-playbook centos-deploy.yaml
# ansible-playbook centos-deploy.yaml
# /ansibles-yaml
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  - name: WIN365ENT_ENVIRONMENT
    value: win365ent
  - name: MS365ENT_ENVIRONMENT
    value: ms365ent

stages:
  - stage: ResourcesPreparation
    jobs:
      - job: ResourcesPrep
        pool:
          vmImage: "ubuntu-latest"
          environment: $(MS365ENT_ENVIRONMENT)
        continueOnError: false
        steps:
          - task: PublishPipelineArtifact@1
            displayName: Pushing YAML Files
            inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifact: 'ansible-out'
              publishLocation: 'pipeline'
          
          - task: PublishBuildArtifacts@1
            displayName: Building YAML Files
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/ansibles-yaml'
              ArtifactName: 'drop'
              publishLocation: 'Container'
              

  - stage: DeployMultipleVM
    jobs:
      - job: DeployMultipleVM
        pool:
          vmImage: "ubuntu-latest"
          environment: $(MS365ENT_ENVIRONMENT)
        continueOnError: true
        steps:
        
          - task: PublishPipelineArtifact@1
            displayName: Build YAML Files for execution
            inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifact: 'ansible-out'
              publishLocation: 'pipeline'

          - task: PublishBuildArtifacts@1
            displayName: Multiple VM Deployment in Multple Region using Ansible Playbok
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/ansibles-yaml'
              ArtifactName: 'drop'
              publishLocation: 'Container'
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'personal'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'ansible-playbook multi-vm-deploy.yaml'
              workingDirectory: '$(System.DefaultWorkingDirectory)/ansibles-yaml'

  - stage: InstallAppviaAnsible
    jobs:
      - job: InstallAppviaAnsible
        pool:
          vmImage: "ubuntu-latest"
          environment: $(MS365ENT_ENVIRONMENT)
        continueOnError: true
        steps:
          - task: PublishPipelineArtifact@1
            displayName: Pushing YAML Files
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/ansibles-yaml'
              artifact: 'ansible'
              publishLocation: 'pipeline'
          - task: PublishBuildArtifacts@1
            displayName: Building YAML Files
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/ansibles-yaml'
              ArtifactName: 'drop'
              publishLocation: 'Container'
          
          - task: AzureCLI@2
            displayName: Ubuntu Installaion using Ansible Playbok
            inputs:
              azureSubscription: 'personal'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'ansible-playbook ubuntu-app.yaml'
              workingDirectory: '$(System.DefaultWorkingDirectory)/ansibles-yaml'
          
          - task: AzureCLI@2
            displayName: Centos Installaion using Ansible Playbok
            inputs:
              azureSubscription: 'personal'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'ansible-playbook centos-app.yaml'
              workingDirectory: '$(System.DefaultWorkingDirectory)/ansibles-yaml'